install swirl
pinstall swirl
install.packages("swirl")
swirl
run swirl
library(lattice)
data(mtcars)
names(mtcars)
lattice(mpg~cyl)
xyplot(mpg~cyl)
xyplot(mpg~cyl, data = mtcars)
lineplot(mpg~cyl, data = mtcars)
xyplot(mpg~cyl, data = mtcars, type="l")
xyplot(mpg~cyl, data = mtcars)
xyplot(mpg~cyl, data = mtcars, alpha=0.5)
xyplot(mpg~cyl | hp, data = mtcars, alpha=0.5)
xyplot(mpg~hp | cyl, data = mtcars, alpha=0.5)
xyplot(mpg~hp | cyl * disp, data = mtcars, alpha=0.5)
?data
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
View(olive)
newdata = as.data.frame(t(colMeans(olive)))
View(newdata)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
View(testSA)
set.seed(13234)
?SAheart
cols = ("age", "alcohol", "obesity", "typea", "tobacco", "ldl")
cols = c("age", "alcohol", "obesity", "typea", "tobacco", "ldl")
ytrain <- trainSA[,"chd"]
ytest <- testSA[,"chd"]
?train
library(caret)
?train
mod <- train(trainSA[,cols], ytrain, method="glm", family="binomial")
?predict
pred <- predict(mod,ytrain)
pred <- predict(ytrain,mod)
pred <- predict(trainSA[,cols],mod)
pred <- predict(mod,trainSA[,cols])
missClass = function(ytrain,pred){sum(((pred > 0.5)*1) != ytrain)/length(ytrain)}
missClass
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass(ytrain, pred)
missClass(ytest,  predict(mod,testSA[,cols]))
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
view(vowel.train)
View(testSA)
vowel.test
vowel.train
View(vowel.test)
vowel.test$y <- as.factor(vowel.test$y)
vowel.train$y <- as.factor(vowel.train$y)
modv <- train(y ~. , vowel.train, model="rf")
varImp(modv)
set.seed(33833)
modv <- train(y ~. , vowel.train, model="rf")
varImp(modv)
varImp(modv$finalModel)
varImp(modv)
modv <- randomForest(y ~. , vowel.train)
varImp(modv)
order(varImp(modv))
order(-varImp(modv))
order(-varImp(modv$finalModel))
data(mtcars)
mtcars
lm(mpg ~ cyl + mpg, mtcars)
lm(mpg ~ cyl + mpg, data =mtcars)
lm(mpg ~ cyl + wt, data = mtcars[])
lm(mpg ~ cyl + wt, data = mtcars[mtcars$cyl == 4,])
lm(mpg ~ cyl + wt, data = mtcars[mtcars$cyl == 8,])
swirl()
library(swirl)
swirl()
install.packageS("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
install.packages("UsingR")
swirl()
ones <- rep(1,nrow(galton))
lm(child~ones + parent -1, galton)
lm(child~parent,galton)
swirl()
quit
swirl()
lm(Fertility~.,swiss)
lm(Fertility~.,data=swiss)
all <- lm(Fertility~.,data=swiss)
summary(all)
summary(lm(Fertility~Agriculture,swiss))
?cor
cor(swiss$Examination, swiss$Education)
cor(swiss$Agiculture, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~. + ec, swiss)
all-efit
all$coef-efit$coef
all$coefficients-efit$coefficients
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
?I
?mtcars
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
lm(y~x)
mod5<-lm(y~x)
hatvalues(mod5)[1:5]
?hatvalues
dfbeta(hatvalues(mod5)[1:5])
?dfbeta
dfbeta((mod5)[1:5])
dfbeta((mod5))
dfbetas((mod5))
exp(-1.68)
exp(0.168)
exp(0.1066)
?anova
setwd("C:/Github/R-Tutorials/Examples/Example_2")
data(mtcars)
length(mtcars)
length(mtcars)
nrow(mtcars)
?aes
library(ggplot2)
?aes
